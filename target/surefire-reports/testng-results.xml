<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="calculator" duration-ms="48" started-at="2018-10-14T05:02:29Z" finished-at="2018-10-14T05:02:30Z">
    <groups>
    </groups>
    <test name="simple test" duration-ms="48" started-at="2018-10-14T05:02:29Z" finished-at="2018-10-14T05:02:30Z">
      <class name="test.java.CalculationTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup" is-config="true" duration-ms="10" started-at="2018-10-14T05:02:29Z" finished-at="2018-10-14T05:02:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="mulTest()[pri:0, instance:test.java.CalculationTest@27efef64]" name="mulTest" duration-ms="4" started-at="2018-10-14T05:02:29Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mulTest -->
        <test-method status="PASS" signature="setup2()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup2" is-config="true" duration-ms="1" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup" is-config="true" duration-ms="1" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup2()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup2" is-config="true" duration-ms="1" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method status="PASS" signature="subTest()[pri:0, instance:test.java.CalculationTest@27efef64]" name="subTest" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subTest -->
        <test-method status="PASS" signature="sumTest(int, int, int)[pri:0, instance:test.java.CalculationTest@27efef64]" name="sumTest" duration-ms="0" started-at="2018-10-14T05:02:30Z" data-provider="sum" finished-at="2018-10-14T05:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="sumTest(int, int, int)[pri:0, instance:test.java.CalculationTest@27efef64]" name="sumTest" duration-ms="1" started-at="2018-10-14T05:02:30Z" data-provider="sum" finished-at="2018-10-14T05:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumTest -->
        <test-method status="PASS" signature="setup2()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup2" is-config="true" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method status="PASS" signature="setup2()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup2" is-config="true" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method status="PASS" signature="setup2()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup2" is-config="true" duration-ms="1" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
        <test-method status="PASS" signature="setup()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="sumTest(int, int, int)[pri:0, instance:test.java.CalculationTest@27efef64]" name="sumTest" duration-ms="0" started-at="2018-10-14T05:02:30Z" data-provider="sum" finished-at="2018-10-14T05:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup" is-config="true" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="sumTest(int, int, int)[pri:0, instance:test.java.CalculationTest@27efef64]" name="sumTest" duration-ms="1" started-at="2018-10-14T05:02:30Z" data-provider="sum" finished-at="2018-10-14T05:02:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [11] but found [10]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [11] but found [10]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at test.java.CalculationTest.sumTest(CalculationTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumTest -->
        <test-method status="PASS" signature="setup2()[pri:0, instance:test.java.CalculationTest@27efef64]" name="setup2" is-config="true" duration-ms="0" started-at="2018-10-14T05:02:30Z" finished-at="2018-10-14T05:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup2 -->
      </class> <!-- test.java.CalculationTest -->
    </test> <!-- simple test -->
  </suite> <!-- calculator -->
</testng-results>
